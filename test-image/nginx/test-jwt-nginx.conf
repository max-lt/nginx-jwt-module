map $jwt_claim_role $jwt_has_admin_role {
    \"admin\"  1;
}

map $jwt_claim_scope $jwt_has_restricted_scope {
    \"restricted\"  1;
}

# One call per minute
limit_req_zone $mapped_id zone=lreq_user:10m rate=1r/m;

map $jwt_claim_id $mapped_id {
  default       $jwt_claim_id;
  ""            "not-set";
}

server {
  auth_jwt_key      inherited-secret;
  auth_jwt          on;

  listen       8000;
  server_name  localhost;

  location = /auth-disabled {
    auth_jwt off;
    try_files _ =201;
  }

  location = /secure-cookie {
    auth_jwt $cookie_rampartjwt;
    try_files _ =201;
  }

  location = /secure-auth-header {
    try_files _ =201;
  }

  location = /string-encoded {
    auth_jwt_key 'secret' utf8;
    try_files _ =201;
  }

  location = /base64-encoded {
    auth_jwt_key 'c2VjcmV0' base64;
    try_files _ =201;
  }

  location = /rsa-file-encoded {
    auth_jwt_key /etc/nginx/keys/rsa-public.pem file;
    try_files _ =201;
  }

  location = /rsa-file-encoded-alg-256 {
    auth_jwt_alg RS256;
    auth_jwt_key /etc/nginx/keys/rsa-public.pem file;
    try_files _ =201;
  }

  location = /rsa-file-encoded-alg-512 {
    auth_jwt_alg RS512;
    auth_jwt_key /etc/nginx/keys/rsa-public.pem file;
    try_files _ =201;
  }

  location = /any-alg {
    auth_jwt_key /etc/nginx/keys/rsa-public.pem file;
    auth_jwt_alg any;
    try_files _ =201;
  }

  location = /auth-require {
    auth_jwt_require $jwt_has_admin_role error=403;
    try_files _ =201;
  }

  location = /auth-compound-require {
    auth_jwt_require $jwt_has_admin_role $jwt_has_restricted_scope error=403;
    try_files _ =201;
  }

  location = /limit-req {
    auth_jwt_key 'secret' utf8;

    add_header X-MAPPED-ID $mapped_id always;
    add_header X-JWT-ID $jwt_claim_id always;

    # limit_req zone=lreq_user burst=1 nodelay;

    try_files _ =201;
  }

  location @ok {
    return 200;
  }
}
